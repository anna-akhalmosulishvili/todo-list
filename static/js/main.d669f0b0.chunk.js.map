{"version":3,"sources":["features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["actions","todo","type","payload","currentTodoReducer","state","action","newQuery","newStatus","filters","query","status","initialState","filterReducer","data","initialArray","filteredArray","newArray","todosReducer","rootReducer","combineReducers","currentTodo","filter","todos","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoList","isLoading","isEmpty","length","dispatch","className","map","id","completed","classNames","title","onClick","currentTodoActions","TodoFilter","initialStore","useState","isSearched","setIsSearched","handleTodosChange","initialCopy","prompt","searchBy","trim","toLowerCase","includes","findTodos","todosActions","setNewPrompt","value","filterActions","onSubmit","event","preventDefault","onChange","e","newFilter","target","handleFilterChange","placeholder","handleQueryChange","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","todoId","find","el","setIsLoading","user","setUser","useEffect","userId","finally","email","name","href","App","filteredStore","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d669f0b0.chunk.js","sourcesContent":["import { Todo } from '../types/Todo';\n\n// we use string literal as a type to avoid mistype in future\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\n// payload is a typical name for an action data\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\n// Action creator return type protect us from a mistype\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\n// These actions will be used in the application\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n\n    case 'currentTodo/REMOVE':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","type SetFilters = {\n  type: 'filters/set',\n  filters: {\n    query: string,\n    status: string,\n  }\n};\n\ntype SetQuery = {\n  type: 'filters/set/query',\n  filters: {\n    query: string,\n  }\n};\n\nexport type SetFilter = {\n  type: 'filters/set/filter',\n  filters: {\n    status: string,\n  }\n};\n\nconst set = (newQuery: string, newStatus: string): SetFilters => ({\n  type: 'filters/set',\n  filters: {\n    query: newQuery,\n    status: newStatus,\n  },\n});\n\nconst setQuery = (newQuery: string): SetQuery => ({\n  type: 'filters/set/query',\n  filters: {\n    query: newQuery,\n  },\n});\n\nconst setFilter = (newStatus: string): SetFilter => ({\n  type: 'filters/set/filter',\n  filters: {\n    status: newStatus,\n  },\n});\n\ntype Actions = SetFilters | SetQuery | SetFilter;\n\nexport const actions = { set, setQuery, setFilter };\n\nconst initialState = {\n  query: '',\n  status: 'all',\n};\n\nconst filterReducer = (state = initialState, action: Actions) => {\n  switch (action.type) {\n    case 'filters/set':\n      return {\n        ...state,\n        ...action.filters,\n      };\n\n    case 'filters/set/query':\n      return {\n        ...state,\n        query: action.filters.query,\n      };\n\n    case 'filters/set/filter':\n      return {\n        ...state,\n        status: action.filters.status,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype SetTodos = {\n  type: 'todos/set';\n  payload: {\n    initialArray: Todo[];\n    filteredArray: Todo[];\n  }\n};\n\ntype SetFilteredTodos = {\n  type: 'todos/filter';\n  payload: {\n    filteredArray: Todo[];\n  }\n};\n\nconst set = (data: Todo[]): SetTodos => ({\n  type: 'todos/set',\n  payload: {\n    initialArray: data,\n    filteredArray: data,\n  },\n});\n\nconst setFiltered = (newArray: Todo[]): SetFilteredTodos => ({\n  type: 'todos/filter',\n  payload: {\n    filteredArray: newArray,\n  },\n});\n\ntype Action = SetTodos | SetFilteredTodos;\n\nexport const actions = { set, setFiltered };\n\ntype TodosState = {\n  initialArray: Todo[];\n  filteredArray: Todo[];\n};\n\nconst initialState: TodosState = {\n  initialArray: [],\n  filteredArray: [],\n};\n\nconst todosReducer = (state = initialState, action: Action) => {\n  switch (action.type) {\n    case 'todos/set':\n      return {\n        ...state,\n        ...action.payload,\n      };\n\n    case 'todos/filter':\n      return {\n        ...state,\n        filteredArray: action.payload.filteredArray,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default todosReducer;\n","/* eslint-disable import/no-unresolved */\n// /* eslint-disable import/no-extraneous-dependencies */\nimport { legacy_createStore as createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","// /* eslint-disable import/no-extraneous-dependencies */\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","/* eslint-disable max-len */\nimport React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\n\ntype Props = {\n  isLoading: boolean;\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ isLoading, todos }) => {\n  const isEmpty = todos.length === 0;\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const dispatch = useAppDispatch();\n\n  return (\n    <>\n      {isEmpty && !isLoading && (\n        <p className=\"notification is-warning\">\n          There are no todos matching current filter criteria\n        </p>\n      )}\n\n      {!isEmpty && !isLoading && (\n        <table className=\"table is-narrow is-fullwidth\">\n          <thead>\n            <tr>\n              <th>#</th>\n\n              <th>\n                <span className=\"icon\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </th>\n\n              <th>Title</th>\n              <th> </th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {todos.map(todo => (\n              <tr\n                data-cy=\"todo\"\n                key={todo.id}\n              >\n                <td className=\"is-vcentered\">{todo.id}</td>\n                <td className=\"is-vcentered\">\n                  {(todo.completed) && (\n                    <span className=\"icon\" data-cy=\"iconCompleted\"><i className=\"fas fa-check\" /></span>\n                  )}\n                </td>\n\n                <td className=\"is-vcentered is-expanded\">\n                  <p\n                    className={classNames({\n                      'has-text-danger': !todo.completed,\n                      'has-text-success': todo.completed,\n                    })}\n                  >\n                    {todo.title}\n                  </p>\n                </td>\n                <td className=\"has-text-right is-vcentered\">\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => dispatch(currentTodoActions.setTodo(todo))}\n                  >\n                    <span className=\"icon\">\n                      <i\n                        className={classNames({\n                          'far fa-eye': currentTodo?.id === 0 || currentTodo?.id !== todo.id,\n                          'far fa-eye-slash': currentTodo?.id === todo.id,\n                        })}\n                      />\n                    </span>\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n    </>\n  );\n};\n","import React, { ChangeEvent, useState } from 'react';\nimport { actions as filterActions } from '../../features/filter';\nimport { actions as todosActions } from '../../features/todos';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { Todo } from '../../types/Todo';\n\nfunction findTodos(todos: Todo[], prompt: string) {\n  const searchBy = prompt.trim().toLowerCase();\n\n  if (searchBy) {\n    return todos.filter((todo) => todo.title.toLowerCase().includes(searchBy));\n  }\n\n  return todos;\n}\n\nexport const TodoFilter: React.FC = () => {\n  const dispatch = useAppDispatch();\n\n  const initialStore = useAppSelector(state => state.todos.initialArray);\n  const { query, status } = useAppSelector(state => state.filter);\n\n  const [isSearched, setIsSearched] = useState(false);\n\n  const handleTodosChange = (filter: string, newQuery: string) => {\n    let initialCopy = [...initialStore];\n\n    switch (filter) {\n      case 'active': {\n        initialCopy = initialCopy.filter((todo) => !todo.completed);\n        break;\n      }\n\n      case 'completed': {\n        initialCopy = initialCopy.filter((todo) => todo.completed);\n        break;\n      }\n\n      case 'all':\n      default:\n        break;\n    }\n\n    initialCopy = findTodos(initialCopy, newQuery);\n    dispatch(todosActions.setFiltered(initialCopy));\n  };\n\n  const handleFilterChange = (e: ChangeEvent<HTMLSelectElement>) => {\n    const newFilter = e.target.value;\n\n    dispatch(filterActions.set(query, newFilter));\n    handleTodosChange(newFilter, query);\n  };\n\n  const setNewPrompt = (value: string) => {\n    const prompt = value;\n\n    dispatch(filterActions.setQuery(prompt));\n    handleTodosChange(status, prompt);\n  };\n\n  const handleQueryChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const prompt = e.target.value;\n\n    if (prompt.length === 0) {\n      setIsSearched(false);\n    }\n\n    setNewPrompt(prompt);\n    setIsSearched(true);\n  };\n\n  const handleQueryReset = () => {\n    const prompt = '';\n\n    setNewPrompt(prompt);\n    setIsSearched(false);\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={(e) => handleFilterChange(e)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(e) => handleQueryChange(e)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {isSearched && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => handleQueryReset()}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { actions } from '../../features/currentTodo';\nimport { useAppDispatch } from '../../app/hooks';\n\ntype Props = {\n  todos: Todo[];\n  todoId: number;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todos,\n  todoId,\n}) => {\n  const todo = todos.find(el => el.id === todoId);\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [user, setUser] = useState<User | null>(null);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    setIsLoading(true);\n    if (todo) {\n      getUser(todo.userId)\n        .then(setUser)\n        .finally(() => setIsLoading(false));\n    }\n  }, [todoId]);\n\n  const {\n    id,\n    title,\n    completed,\n  } = todo || {};\n\n  const {\n    email,\n    name,\n  } = user || {};\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading && (\n        <Loader />\n      )}\n\n      {!isLoading && (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => dispatch(actions.removeTodo())}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">{title}</p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong\n                className={classNames({\n                  'has-text-danger': !completed,\n                  'has-text-success': completed,\n                })}\n              >\n                {(completed) ? 'Done' : 'Planned'}\n              </strong>\n              {' by '}\n              <a href={`mailto:${email}`}>{name}</a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable import/no-extraneous-dependencies */\n/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { getTodos } from './api';\nimport { actions as todosActions } from './features/todos';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\n\nexport const App: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const initialStore = useAppSelector(state => state.todos.initialArray);\n  const filteredStore = useAppSelector(state => state.todos.filteredArray);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    if (!initialStore.length) {\n      getTodos()\n        .then((todos) => {\n          dispatch(todosActions.set(todos));\n        })\n        .finally(() => setIsLoading(false));\n    }\n  }, [dispatch]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {isLoading\n                ? <Loader />\n                : (\n                  <TodoList\n                    isLoading={isLoading}\n                    todos={filteredStore}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {currentTodo && (\n        <TodoModal\n          todos={filteredStore}\n          todoId={currentTodo.id}\n        />\n      )}\n    </>\n  );\n};\n","/* eslint-disable react/react-in-jsx-scope */\n/* eslint-disable import/no-extraneous-dependencies */\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}